import { Schema } from "./schema";
import { Text } from "havarotjs";
/**
 * transliterates Hebrew text
 *
 * @param text - a string or {@link https://charlesloder.github.io/havarot/classes/text.Text.html | Text} of Hebrew characters
 * @param schema - a {@link Schema} for transliterating the text
 * @returns a transliterated text
 *
 * @example Default
 * ```ts
 * import { transliterate } from "hebrew-transliteration";
 *
 * transliterate("אֱלֹהִים");
 * // "ʾĕlōhîm";
 * ```
 *
 * ---
 *
 * @remarks
 *
 * If no {@link Schema} is passed, then the package defaults to SBL's academic style
 *
 * You can pass in a partial schema that will modify SBL's academic style:
 *
 * ```ts
 * transliterate("שָׁלוֹם", { SHIN: "sh" })
 * // shālôm
 * ```
 *
 * ---
 *
 * If you need a fully custom schema, it is best to use the {@link Schema} constructor:
 *
 * ```ts
 * import { transliterate, Schema } from "hebrew-transliteration";
 *
 * const schema = new Schema({ ALEF: "'", BET: "B", ... QAMETS: "A", ... }) // truncated for brevity
 *
 * transliterate("אָ֣ב", schema)
 * // 'AB
 * ```
 *
 */
export declare const transliterate: (text: string | Text, schema?: Partial<Schema> | Schema) => string;
